# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test lunaChat
      run: |
        python3 luna.py > luna_log.txt 2>&1 & 
        echo $! > web_app_pid.txt  # Save the process ID of the web app to a file
        sleep 30
    - name: Display log output
      run: cat luna_log.txt  # Display any output logged by the Python script
      timeout-minutes: 1  # Adjust timeout to ensure sufficient time for log output
    - name: Test web app functionality
      run: |
        curl http://127.0.0.1:5000/
        sleep 30
    - name: Wait for tests to complete
      run: sleep 1m
    - name: Stop Python web app
      run: |
        kill -9 $(cat web_app_pid.txt)  # Terminate the web app process using the saved process ID
        rm web_app_pid.txt  # Remove the file containing the process ID
